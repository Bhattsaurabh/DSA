Question: Remove all occurence of substring.

Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:

Find the leftmost occurrence of the substring part and remove it from s.
Return s after removing all occurrences of part.

A substring is a contiguous sequence of characters in a string.

 

Example 1:

Input: s = "daabcbaabcbc", part = "abc"
Output: "dab"
Explanation: The following operations are done:
- s = "daabcbaabcbc", remove "abc" starting at index 2, so s = "dabaabcbc".
- s = "dabaabcbc", remove "abc" starting at index 4, so s = "dababc".
- s = "dababc", remove "abc" starting at index 3, so s = "dab".
Now s has no occurrences of "abc".
Example 2:

Input: s = "axxxxyyyyb", part = "xy"
Output: "ab"
Explanation: The following operations are done:
- s = "axxxxyyyyb", remove "xy" starting at index 4 so s = "axxxyyyb".
- s = "axxxyyyb", remove "xy" starting at index 3 so s = "axxyyb".
- s = "axxyyb", remove "xy" starting at index 2 so s = "axyb".
- s = "axyb", remove "xy" starting at index 1 so s = "ab".
Now s has no occurrences of "xy".
 

Constraints:

1 <= s.length <= 1000
1 <= part.length <= 1000
s​​​​​​ and part consists of lowercase English letters.

Code:

string removeOccurrences(string s, string part) {

        int n1 = s.size();
        int n2 = part.size();
        stack<char>st;

        if(s == part)
         return "";
        if(n2 > n1)
          return s;


        for(int i=0 ;i<n1 ;i++)
        {
            st.push(s[i]);

            if(!st.empty() && st.top() == part[n2-1] && st.size() >= n2)
            {
                int k=n2-1;
                string str = "";
                while(!st.empty() && k>=0 && st.top() == part[k])
                {
                    str = st.top() + str;
                    st.pop();
                    k--;
                }
                if(str != part)
                {
                    for(int j=0 ;j<str.size(); j++)
                    {
                        st.push(str[j]);
                    }
                } 

            }

        }

        string res="";

        while(!st.empty())
        {
            res = st.top() + res;

            st.pop();
        }

         return res;

    }