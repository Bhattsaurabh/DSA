Question: word subset.

You are given two string arrays words1 and words2.

A string b is a subset of string a if every letter in b occurs in a including multiplicity.

For example, "wrr" is a subset of "warrior" but is not a subset of "world".
A string a from words1 is universal if for every string b in words2, b is a subset of a.

Return an array of all the universal strings in words1. You may return the answer in any order.

 

Example 1:

Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["e","o"]
Output: ["facebook","google","leetcode"]
Example 2:

Input: words1 = ["amazon","apple","facebook","google","leetcode"], words2 = ["l","e"]
Output: ["apple","google","leetcode"]
 

Constraints:

1 <= words1.length, words2.length <= 104
1 <= words1[i].length, words2[i].length <= 10
words1[i] and words2[i] consist only of lowercase English letters.
All the strings of words1 are unique.


Code:

vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {

        vector<string>res;
        vector<int>freq2(26,0);

         for(auto& str: words2)
            {
                vector<int>temp(26,0);
                for(int i=0 ;i<str.size();i++)
                {
                    temp[str[i] - 'a']++;
                    freq2[str[i] - 'a']  = max(freq2[str[i] - 'a'], temp[str[i] - 'a'] );
                }
            }



        for(auto& str: words1)
        {
            vector<int>freq1(26,0);
            for(int i=0 ;i<str.size();i++)
            {
                freq1[str[i] - 'a']++;
            }

            bool flag = true;

           for(int i=0 ;i<freq2.size();i++)
           {
             if(freq1[i] < freq2[i])
              {
                flag = false;
                break;
              }
           }

            if(flag == true)
            {
             res.push_back(str);
            }

        }

        return res;

        
    }


    