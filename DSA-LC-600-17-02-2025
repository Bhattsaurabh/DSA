Question: Letter Tile Possibilities.


You have n  tiles, where each tile has one letter tiles[i] printed on it.

Return the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.

 

Example 1:

Input: tiles = "AAB"
Output: 8
Explanation: The possible sequences are "A", "B", "AA", "AB", "BA", "AAB", "ABA", "BAA".
Example 2:

Input: tiles = "AAABBC"
Output: 188
Example 3:

Input: tiles = "V"
Output: 1
 

Constraints:

1 <= tiles.length <= 7
tiles consists of uppercase English letters.

Code:

 void dfs( string& tiles, string str, unordered_set<string>&s,  vector<int>&v)
    {
        s.insert(str);
        
        for(int i=0 ;i<tiles.size();i++)
        {
            if(v[i] == -1)
            {
                v[i] = 1;
                dfs(tiles, str+tiles[i], s, v);
                v[i] = -1;
            }
        }
        
    }

    int numTilePossibilities(string tiles) {

        int n =tiles.size();
        unordered_set<string>s;
        vector<int>v(n, -1);

        dfs(tiles,"", s, v);

        return s.size()-1;
    }